apply plugin: 'com.android.application'
apply plugin: 'kotlin-android'

android {
    signingConfigs {
        release {
            storeFile file('/Users/dingyubin/resp/mockapi/keystore/bin.keystore')
            storePassword '123456789'
            keyAlias 'bin'
            keyPassword '123456789'
        }
    }

    //关掉AndroidStudio对PNG图片的合法性检验
    aaptOptions {
        cruncherEnabled = false
    }

    compileSdkVersion appCompileSdkVersion
    buildToolsVersion appBuildToolsVersion

    defaultConfig {
        applicationId 'com.yubin.mockapi'
        minSdkVersion appMinSdkVersion
        targetSdkVersion appTargetSdkVersion
        versionCode appVersionCode
        versionName appVersionName
        multiDexEnabled true
        signingConfig signingConfigs.release
        testInstrumentationRunner 'androidx.test.runner.AndroidJUnitRunner'

    }

    //分包2
    dexOptions {
        javaMaxHeapSize "4g"
        preDexLibraries = false
        additionalParameters = ['--multi-dex', '--main-dex-list=' + project.rootDir.absolutePath + '/app/maindexlist.txt', '--minimal-main-dex',
                                '--set-max-idx-number=1000']
    }

    buildTypes {
        debug {
            ndk {
                abiFilters "armeabi-v7a", "x86"
            }
            buildConfigField "Boolean", "isDebug", "true"
            minifyEnabled false
            zipAlignEnabled false
            shrinkResources false
        }

        release {
            ndk {
                abiFilters "armeabi-v7a", "x86"
            }
            buildConfigField "Boolean", "isDebug", "false"
            minifyEnabled true
            shrinkResources true
            zipAlignEnabled true
            proguardFiles getDefaultProguardFile('proguard-android-optimize.txt'), 'proguard-rules.pro'
        }
    }
    compileOptions {
        sourceCompatibility appJavaCompatibility
        targetCompatibility appJavaCompatibility
    }


    applicationVariants.all { variant ->
        if (variant.buildType.name == 'release') {
            variant.mergeAssets.doLast {
                delete(fileTree(dir: variant.mergeAssets.outputDir, includes: ['*.json', '*.zip', 'mockdata/**/*']))
            }
        }
    }

    buildFeatures {
        viewBinding true
    }
}

dependencies {
    implementation fileTree(dir: "libs", include: ["*.jar"])

    implementation 'androidx.multidex:multidex:2.0.1'

    implementation project(':account')
    implementation project(':mvp')
    implementation project(':mvvm')
    implementation project(':baselibrary')
}

repositories {
    mavenCentral()
}