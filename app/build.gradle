apply plugin: 'com.android.application'
apply plugin: 'kotlin-android'
apply plugin: 'kotlin-kapt'

android {
    signingConfigs {
        release {
            storeFile file('/Users/dingyubin/resp/mockapi/keystore/bin.keystore')
            storePassword '123456789'
            keyAlias 'bin'
            keyPassword '123456789'
        }
    }

    //关掉AndroidStudio对PNG图片的合法性检验
    aaptOptions {
        cruncherEnabled = false
    }

    //调试
    if(rootProject.hasProperty('devBuild')){
        splits.abi.enable = false
        splits.density.enable = false
        //禁用PNG压缩
        aaptOptions.cruncherEnabled = false
    }

    compileSdkVersion rootProject.ext.android.compileSdkVersion
    buildToolsVersion rootProject.ext.android.buildToolsVersion

    defaultConfig {
        applicationId rootProject.ext.android.applicationId
        minSdkVersion rootProject.ext.android.minSdkVersion
        targetSdkVersion rootProject.ext.android.targetSdkVersion
        versionCode rootProject.ext.android.versionCode
        versionName rootProject.ext.android.versionName
        multiDexEnabled true
        signingConfig signingConfigs.release
        testInstrumentationRunner 'androidx.test.runner.AndroidJUnitRunner'

        //调试
        resConfigs("zh","xxhdpi")
    }

    buildTypes {
        debug {
            ndk {
                abiFilters "arm64-v8a","armeabi-v7a", "x86"
            }
            buildConfigField "Boolean", "isDebug", "true"
            minifyEnabled false
            zipAlignEnabled false
            shrinkResources false
        }

        release {
            ndk {
                abiFilters "arm64-v8a","armeabi-v7a", "x86"
            }
            buildConfigField "Boolean", "isDebug", "false"
            minifyEnabled true
            shrinkResources true
            zipAlignEnabled true
            proguardFiles getDefaultProguardFile('proguard-android-optimize.txt'), 'proguard-rules.pro'
        }
    }
    compileOptions {
        sourceCompatibility rootProject.ext.android.javaCompatibility
        targetCompatibility rootProject.ext.android.javaCompatibility
    }


//    applicationVariants.all { variant ->
//        if (variant.buildType.name == 'release') {
//            variant.mergeAssets.doLast {
//                delete(fileTree(dir: variant.mergeAssets.outputDir, includes: ['*.json', '*.zip', 'mockdata/**/*']))
//            }
//        }
//    }

    buildFeatures {
        viewBinding true
    }
}

dependencies {
    implementation fileTree(dir: "libs", include: ["*.jar"])

    implementation 'androidx.multidex:multidex:2.0.1'

    implementation project(':account')
    implementation project(':mvp')
    implementation project(':mvvm')
    implementation project(':mvx')
    implementation project(':baselibrary')
}

repositories {
    mavenCentral()
}

task hello {
    doLast {
        println 'Hello world!'
    }
}