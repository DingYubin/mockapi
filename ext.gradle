import java.util.regex.Matcher
import java.util.regex.Pattern

ext {
    //Android 配置
    android = [
            compileSdkVersion: 31,
            buildToolsVersion: "30.0.3",
            applicationId    : "com.yubin.mockapi",
            minSdkVersion    : 23,
            targetSdkVersion : 31,
            versionCode      : 1,
            versionName      : "1.0.0",
            javaCompatibility: JavaVersion.VERSION_11
    ]

    //依赖 配置
    dependency = [
            lombok                     : "org.projectlombok:lombok:1.18.22",
            gson                       : "com.google.code.gson:gson:2.8.9",
            rxjava2                    : "io.reactivex.rxjava2:rxjava:2.2.21",
            rxandroid2                 : "io.reactivex.rxjava2:rxandroid:2.1.1",
            retrofit2                  : "com.squareup.retrofit2:retrofit:2.9.0",
            retrofit2_converter_gson   : "com.squareup.retrofit2:converter-gson:2.9.0",
            retrofit2_adapter_rxjava2  : "com.squareup.retrofit2:adapter-rxjava2:2.9.0"
    ]

    database = [
            guava                      : '27.0.1-android'
    ]

    baselib = [
            arach                      : '1.1.1',
            logger                     : '2.1.1'
    ]

    tinker = [
            versionName : '1.9.14.24'
    ]

//    tinkerEnabled = isRelease()
}

/**
 *
 * @return 是否为release
 */
def isRelease() {
    Gradle gradle = getGradle()
    String tskReqStr = gradle.getStartParameter().getTaskRequests().toString()

    Pattern pattern
    if (tskReqStr.contains("assemble")) {
        println tskReqStr
        pattern = Pattern.compile("assemble(\\w*)(Release|Debug)")
    } else {
        pattern = Pattern.compile("generate(\\w*)(Release|Debug)")
    }
    Matcher matcher = pattern.matcher(tskReqStr)

    if (matcher.find()) {
        String task = matcher.group(0).toLowerCase()
        println("[BuildType] Current task: " + task)
        return task.contains("release")
    } else {
        println "[BuildType] NO MATCH FOUND"
        return false
    }
}